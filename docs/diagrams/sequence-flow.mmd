
    participant NotaCreditoController
    participant NotaCreditoService
    participant ComprobanteClient
    participant FacturacionClient

    User->>NotaCreditoController: GET /api/isolate/nota-credito/from/factura/{...}/nota/credito/{...}
    NotaCreditoController->>NotaCreditoService: generateNotaCredito(...)
    NotaCreditoService->>ClienteMovimientoClient: findByFactura(...)
    NotaCreditoService->>ComprobanteClient: findByComprobanteId(...)
    NotaCreditoService->>FacturacionClient: registroNotaCreditoFromFactura(...)
    FacturacionClient-->>NotaCreditoService: ClienteMovimientoDto
    NotaCreditoService-->>NotaCreditoController: ClienteMovimientoDto
    NotaCreditoController-->>User: ResponseEntity(OK)
sequenceDiagram
    participant User
    participant RellenadorController
    participant RellenadorService
    participant FacturadorClient
    participant ClienteMovimientoClient
    participant OrderNoteClient
    participant TransaccionFacturaProgramaDiaClient

    User->>RellenadorController: GET /api/isolate/rellenador/auto-completa/{...}
    RellenadorController->>RellenadorService: autoCompleta(...)
    RellenadorService->>FacturadorClient: consultaComprobante(...)
    FacturadorClient-->>RellenadorService: FacturaResponseDto
    RellenadorService->>ClienteMovimientoClient: findByComprobante(...)
    alt Comprobante NO existe
        ClienteMovimientoClient-->>RellenadorService: Exception
        RellenadorService->>OrderNoteClient: findLastByNumeroDocumento(...)
        OrderNoteClient-->>RellenadorService: OrderNoteDto
        alt Importe ARCA == OrderNote
            RellenadorService->>TransaccionFacturaProgramaDiaClient: registroTransaccionFacturaProgramaDia(...)
            TransaccionFacturaProgramaDiaClient-->>RellenadorService: void
        end
    else Comprobante SI existe
        ClienteMovimientoClient-->>RellenadorService: ClienteMovimientoDto
    end
    RellenadorService-->>RellenadorController: void
    RellenadorController-->>User: ResponseEntity(OK)
