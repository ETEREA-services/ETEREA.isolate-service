{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[C"
    },
    {
      "type": "[D"
    },
    {
      "type": "[F"
    },
    {
      "type": "[I"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Ljakarta.servlet.Filter;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Ljava.lang.constant.ClassDesc;"
    },
    {
      "type": "[Ljava.lang.constant.ConstantDesc;"
    },
    {
      "type": "[Ljavax.management.openmbean.CompositeData;"
    },
    {
      "type": "[Lnet.bytebuddy.description.type.TypeDescription;"
    },
    {
      "type": "[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
    },
    {
      "type": "[Lorg.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider;"
    },
    {
      "type": "[Lorg.springframework.context.annotation.ComponentScan$Filter;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.hateoas.config.EnableHypermediaSupport$HypermediaType;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
      "type": "[S"
    },
    {
      "type": "[Z"
    },
    {
      "type": "boolean"
    },
    {
      "type": "brave.Tracer"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JacksonAnnotation"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonFormat"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonFormat$Shape"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Include"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonProperty"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
      "fields": [
        {
          "name": "drainStatus"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.BoundedLocalCache",
      "fields": [
        {
          "name": "refreshes"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Cache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PD",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.PDW",
      "fields": [
        {
          "name": "writeTime"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.SIW",
      "fields": [
        {
          "name": "FACTORY"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.StripedBuffer",
      "fields": [
        {
          "name": "tableBusy"
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.UnboundedLocalCache",
      "fields": [
        {
          "name": "refreshes"
        }
      ]
    },
    {
      "type": "com.github.therapi.runtimejavadoc.CommentFormatter"
    },
    {
      "type": "com.google.gson.Gson",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.GsonBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.Strictness"
    },
    {
      "type": "com.hazelcast.core.Hazelcast"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.hazelcast.spring.cache.HazelcastCache"
    },
    {
      "type": "com.ibm.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "com.mongodb.MongoClientSettings"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.netflix.discovery.AbstractDiscoveryClientOptionalArgs",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.discovery.EurekaClient"
    },
    {
      "type": "com.netflix.discovery.EurekaClientConfig"
    },
    {
      "type": "com.netflix.discovery.shared.transport.jersey.TransportClientFactories"
    },
    {
      "type": "com.nimbusds.jose.jwk.source.JWKSource"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rabbitmq.client.ConnectionFactory"
    },
    {
      "type": "com.rometools.rome.feed.WireFeed"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.stoyanr.evictor.ConcurrentMapWithTimedEviction"
    },
    {
      "type": "com.sun.management.GarbageCollectionNotificationInfo"
    },
    {
      "type": "com.sun.management.GarbageCollectorMXBean"
    },
    {
      "type": "com.sun.management.GcInfo",
      "fields": [
        {
          "name": "builder"
        },
        {
          "name": "extAttributes"
        }
      ]
    },
    {
      "type": "com.sun.management.HotSpotDiagnosticMXBean"
    },
    {
      "type": "com.sun.management.OperatingSystemMXBean"
    },
    {
      "type": "com.sun.management.ThreadMXBean"
    },
    {
      "type": "com.sun.management.UnixOperatingSystemMXBean"
    },
    {
      "type": "com.sun.management.VMOption"
    },
    {
      "type": "com.sun.management.internal.GarbageCollectorExtImpl"
    },
    {
      "type": "com.sun.management.internal.HotSpotDiagnostic"
    },
    {
      "type": "com.sun.management.internal.HotSpotThreadImpl"
    },
    {
      "type": "com.sun.management.internal.OperatingSystemImpl"
    },
    {
      "type": "com.sun.management.internal.VirtualThreadSchedulerImpls$VirtualThreadSchedulerImpl"
    },
    {
      "type": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.tools.attach.VirtualMachine"
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "com.wavefront.sdk.common.WavefrontSender"
    },
    {
      "type": "com.wavefront.sdk.common.application.ApplicationTags"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource"
    },
    {
      "type": "eterea.isolate.service.IsolateServiceApplication",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.IsolateServiceApplicationTests",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "contextLoads",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.client.core.ArticuloClient"
    },
    {
      "type": "eterea.isolate.service.client.core.ClienteMovimientoClient",
      "allDeclaredFields": true
    },
    {
      "type": "eterea.isolate.service.client.core.facade.FacturacionClient"
    },
    {
      "type": "eterea.isolate.service.client.core.facade.TransaccionFacturaProgramaDiaClient",
      "allDeclaredFields": true
    },
    {
      "type": "eterea.isolate.service.client.pyafipws.FacturadorClient",
      "allDeclaredFields": true
    },
    {
      "type": "eterea.isolate.service.client.web.OrderNoteClient",
      "allDeclaredFields": true
    },
    {
      "type": "eterea.isolate.service.configuration.IsolateServiceConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "basicAuthRequestInterceptor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.configuration.IsolateServiceConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "eterea.isolate.service.configuration.IsolateServiceConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "eterea.isolate.service.configuration.IsolateServiceConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "eterea.isolate.service.controller.RellenadorController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "eterea.isolate.service.service.RellenadorService"
          ]
        },
        {
          "name": "autoCompleta",
          "parameterTypes": [
            "java.lang.Integer",
            "java.lang.Integer",
            "java.lang.Long",
            "java.lang.Boolean",
            "java.lang.Boolean"
          ]
        },
        {
          "name": "consultaComprobante",
          "parameterTypes": [
            "java.lang.Integer",
            "java.lang.Integer",
            "java.lang.Long"
          ]
        }
      ]
    },
    {
      "type": "eterea.isolate.service.controller.RellenadorControllerTest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "autoCompleta_shouldReturnOk",
          "parameterTypes": []
        },
        {
          "name": "consultaComprobante_shouldReturnFacturaResponse",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.model.dto.FacturaResponseDto",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getFactura",
          "parameterTypes": []
        },
        {
          "name": "getMensaje",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.model.dto.FacturaResponseDto$FacturaDto",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getActividades",
          "parameterTypes": []
        },
        {
          "name": "getCae",
          "parameterTypes": []
        },
        {
          "name": "getCbtDesde",
          "parameterTypes": []
        },
        {
          "name": "getCbtHasta",
          "parameterTypes": []
        },
        {
          "name": "getCbtesAsoc",
          "parameterTypes": []
        },
        {
          "name": "getCompradores",
          "parameterTypes": []
        },
        {
          "name": "getConcepto",
          "parameterTypes": []
        },
        {
          "name": "getFchVencCae",
          "parameterTypes": []
        },
        {
          "name": "getFechaCbte",
          "parameterTypes": []
        },
        {
          "name": "getFechaServDesde",
          "parameterTypes": []
        },
        {
          "name": "getFechaServHasta",
          "parameterTypes": []
        },
        {
          "name": "getFechaVencPago",
          "parameterTypes": []
        },
        {
          "name": "getImpIva",
          "parameterTypes": []
        },
        {
          "name": "getImpNeto",
          "parameterTypes": []
        },
        {
          "name": "getImpOpEx",
          "parameterTypes": []
        },
        {
          "name": "getImpTotConc",
          "parameterTypes": []
        },
        {
          "name": "getImpTotal",
          "parameterTypes": []
        },
        {
          "name": "getImpTrib",
          "parameterTypes": []
        },
        {
          "name": "getIva",
          "parameterTypes": []
        },
        {
          "name": "getMonedaCtz",
          "parameterTypes": []
        },
        {
          "name": "getMonedaId",
          "parameterTypes": []
        },
        {
          "name": "getNroDoc",
          "parameterTypes": []
        },
        {
          "name": "getObs",
          "parameterTypes": []
        },
        {
          "name": "getOpcionales",
          "parameterTypes": []
        },
        {
          "name": "getPuntoVta",
          "parameterTypes": []
        },
        {
          "name": "getResultado",
          "parameterTypes": []
        },
        {
          "name": "getTipoCbte",
          "parameterTypes": []
        },
        {
          "name": "getTipoDoc",
          "parameterTypes": []
        },
        {
          "name": "getTributos",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.model.dto.web.OrderNoteDto",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBillingAddress",
          "parameterTypes": []
        },
        {
          "name": "getBillingCity",
          "parameterTypes": []
        },
        {
          "name": "getBillingCountry",
          "parameterTypes": []
        },
        {
          "name": "getBillingDniPasaporte",
          "parameterTypes": []
        },
        {
          "name": "getBillingEmail",
          "parameterTypes": []
        },
        {
          "name": "getBillingFirstName",
          "parameterTypes": []
        },
        {
          "name": "getBillingFullName",
          "parameterTypes": []
        },
        {
          "name": "getBillingLastName",
          "parameterTypes": []
        },
        {
          "name": "getBillingPhone",
          "parameterTypes": []
        },
        {
          "name": "getBillingPostCode",
          "parameterTypes": []
        },
        {
          "name": "getBillingState",
          "parameterTypes": []
        },
        {
          "name": "getCartDiscount",
          "parameterTypes": []
        },
        {
          "name": "getCompletedDate",
          "parameterTypes": []
        },
        {
          "name": "getCustomerNote",
          "parameterTypes": []
        },
        {
          "name": "getModifiedDate",
          "parameterTypes": []
        },
        {
          "name": "getOrderCurrency",
          "parameterTypes": []
        },
        {
          "name": "getOrderDate",
          "parameterTypes": []
        },
        {
          "name": "getOrderNotes",
          "parameterTypes": []
        },
        {
          "name": "getOrderNumberId",
          "parameterTypes": []
        },
        {
          "name": "getOrderShipping",
          "parameterTypes": []
        },
        {
          "name": "getOrderShippingRefunded",
          "parameterTypes": []
        },
        {
          "name": "getOrderStatus",
          "parameterTypes": []
        },
        {
          "name": "getOrderSubtotal",
          "parameterTypes": []
        },
        {
          "name": "getOrderSubtotalRefunded",
          "parameterTypes": []
        },
        {
          "name": "getOrderTotal",
          "parameterTypes": []
        },
        {
          "name": "getOrderTotalTax",
          "parameterTypes": []
        },
        {
          "name": "getPaidDate",
          "parameterTypes": []
        },
        {
          "name": "getPayment",
          "parameterTypes": []
        },
        {
          "name": "getPaymentMethodTitle",
          "parameterTypes": []
        },
        {
          "name": "getProducts",
          "parameterTypes": []
        },
        {
          "name": "getShippingAddress",
          "parameterTypes": []
        },
        {
          "name": "getShippingCity",
          "parameterTypes": []
        },
        {
          "name": "getShippingCountryFull",
          "parameterTypes": []
        },
        {
          "name": "getShippingFirstName",
          "parameterTypes": []
        },
        {
          "name": "getShippingFullName",
          "parameterTypes": []
        },
        {
          "name": "getShippingLastName",
          "parameterTypes": []
        },
        {
          "name": "getShippingMethodTitle",
          "parameterTypes": []
        },
        {
          "name": "getShippingPostCode",
          "parameterTypes": []
        },
        {
          "name": "getShippingState",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.model.dto.web.PaymentDto",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCuotas",
          "parameterTypes": []
        },
        {
          "name": "getDetalle",
          "parameterTypes": []
        },
        {
          "name": "getEstado",
          "parameterTypes": []
        },
        {
          "name": "getEstadoId",
          "parameterTypes": []
        },
        {
          "name": "getFechaPago",
          "parameterTypes": []
        },
        {
          "name": "getFechaTransaccion",
          "parameterTypes": []
        },
        {
          "name": "getInformacionAdicional",
          "parameterTypes": []
        },
        {
          "name": "getInformacionAdicionalLink",
          "parameterTypes": []
        },
        {
          "name": "getInformacionPagador",
          "parameterTypes": []
        },
        {
          "name": "getMarcaTarjeta",
          "parameterTypes": []
        },
        {
          "name": "getMedioPago",
          "parameterTypes": []
        },
        {
          "name": "getMetodoPago",
          "parameterTypes": []
        },
        {
          "name": "getMonto",
          "parameterTypes": []
        },
        {
          "name": "getOrderNumberId",
          "parameterTypes": []
        },
        {
          "name": "getProductTransactions",
          "parameterTypes": []
        },
        {
          "name": "getTipo",
          "parameterTypes": []
        },
        {
          "name": "getTransaccionComercioId",
          "parameterTypes": []
        },
        {
          "name": "getTransaccionPlataformaId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "eterea.isolate.service.service.RellenadorService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "eterea.isolate.service.client.pyafipws.FacturadorClient",
            "eterea.isolate.service.client.core.ClienteMovimientoClient",
            "eterea.isolate.service.client.web.OrderNoteClient",
            "eterea.isolate.service.client.core.facade.TransaccionFacturaProgramaDiaClient"
          ]
        }
      ]
    },
    {
      "type": "eterea.isolate.service.service.RellenadorServiceTest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "autoCompleta_happyPath",
          "parameterTypes": []
        },
        {
          "name": "autoCompleta_shouldReturnWhenAmountsDiffer",
          "parameterTypes": []
        },
        {
          "name": "consultaComprobante_shouldCallClient",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "feign.BaseBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "feign.Client"
    },
    {
      "type": "feign.Contract"
    },
    {
      "type": "feign.Contract$BaseContract",
      "allDeclaredFields": true
    },
    {
      "type": "feign.Feign"
    },
    {
      "type": "feign.Feign$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "feign.RequestInterceptor"
    },
    {
      "type": "feign.Retryer"
    },
    {
      "type": "feign.Retryer$1",
      "allDeclaredFields": true
    },
    {
      "type": "feign.auth.BasicAuthRequestInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "feign.codec.Decoder"
    },
    {
      "type": "feign.codec.Encoder"
    },
    {
      "type": "feign.hc5.ApacheHttp5Client"
    },
    {
      "type": "feign.http2client.Http2Client"
    },
    {
      "type": "feign.micrometer.MicrometerCapability"
    },
    {
      "type": "feign.micrometer.MicrometerObservationCapability"
    },
    {
      "type": "feign.okhttp.OkHttpClient"
    },
    {
      "type": "feign.optionals.OptionalDecoder",
      "allDeclaredFields": true
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
    },
    {
      "type": "io.micrometer.appoptics.AppOpticsMeterRegistry"
    },
    {
      "type": "io.micrometer.atlas.AtlasMeterRegistry"
    },
    {
      "type": "io.micrometer.common.lang.NonNullApi"
    },
    {
      "type": "io.micrometer.common.lang.NonNullFields"
    },
    {
      "type": "io.micrometer.common.lang.Nullable"
    },
    {
      "type": "io.micrometer.context.ContextSnapshot"
    },
    {
      "type": "io.micrometer.context.ThreadLocalAccessor"
    },
    {
      "type": "io.micrometer.core.annotation.Timed"
    },
    {
      "type": "io.micrometer.core.instrument.Clock"
    },
    {
      "type": "io.micrometer.core.instrument.Clock$1",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.binder.MeterBinder"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter$9",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowMax",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowSum",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.observation.MeterObservationHandler"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleConfig"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.datadog.DatadogMeterRegistry"
    },
    {
      "type": "io.micrometer.dynatrace.DynatraceMeterRegistry"
    },
    {
      "type": "io.micrometer.elastic.ElasticMeterRegistry"
    },
    {
      "type": "io.micrometer.ganglia.GangliaMeterRegistry"
    },
    {
      "type": "io.micrometer.graphite.GraphiteMeterRegistry"
    },
    {
      "type": "io.micrometer.humio.HumioMeterRegistry"
    },
    {
      "type": "io.micrometer.influx.InfluxMeterRegistry"
    },
    {
      "type": "io.micrometer.java21.instrument.binder.jdk.VirtualThreadMetrics"
    },
    {
      "type": "io.micrometer.jmx.JmxMeterRegistry"
    },
    {
      "type": "io.micrometer.kairos.KairosMeterRegistry"
    },
    {
      "type": "io.micrometer.newrelic.NewRelicMeterRegistry"
    },
    {
      "type": "io.micrometer.observation.Observation"
    },
    {
      "type": "io.micrometer.observation.ObservationFilter"
    },
    {
      "type": "io.micrometer.observation.ObservationHandler"
    },
    {
      "type": "io.micrometer.observation.ObservationPredicate"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry"
    },
    {
      "type": "io.micrometer.observation.SimpleObservationRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.prometheusmetrics.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.registry.otlp.OtlpMeterRegistry"
    },
    {
      "type": "io.micrometer.signalfx.SignalFxMeterRegistry"
    },
    {
      "type": "io.micrometer.stackdriver.StackdriverMeterRegistry"
    },
    {
      "type": "io.micrometer.statsd.StatsdMeterRegistry"
    },
    {
      "type": "io.micrometer.tracing.Tracer"
    },
    {
      "type": "io.micrometer.tracing.otel.bridge.OtelTracer"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.opentelemetry.api.OpenTelemetry"
    },
    {
      "type": "io.opentelemetry.context.ContextStorage"
    },
    {
      "type": "io.opentelemetry.sdk.OpenTelemetrySdk"
    },
    {
      "type": "io.r2dbc.pool.ConnectionPool"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverters",
      "fields": [
        {
          "name": "converters"
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.filter.SpecFilter",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.util.ObjectMapperFactory",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.annotations.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Hidden"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPI31"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Operation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.StringToClassMapItem"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.Extension"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.ExtensionProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.headers.Header"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.Link"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.LinkParameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ArraySchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentRequired"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentSchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DiscriminatorMapping"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Encoding"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ExampleObject"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.SchemaProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.Server"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.ServerVariable"
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.jsr.Bootstrap"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.faces.context.FacesContext"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.mail.internet.MimeMessage"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.persistence.Persistence"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.GenericServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletConfig"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.servlet.http.HttpServlet",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.servlet.jsp.jstl.core.Config"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.ValidatorFactory"
    },
    {
      "type": "jakarta.validation.bootstrap.GenericBootstrap"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.websocket.server.ServerContainer"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "java.beans.Introspector"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getNestHost",
          "parameterTypes": []
        },
        {
          "name": "getNestMembers",
          "parameterTypes": []
        },
        {
          "name": "getPackageName",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isRecord",
          "parameterTypes": []
        },
        {
          "name": "isSealed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "methods": [
        {
          "name": "getUnnamedModule",
          "parameterTypes": []
        },
        {
          "name": "registerAsParallelCapable",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Cloneable"
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Deprecated"
    },
    {
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Enum",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.FunctionalInterface"
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "addReads",
          "parameterTypes": [
            "java.lang.Module"
          ]
        },
        {
          "name": "canRead",
          "parameterTypes": [
            "java.lang.Module"
          ]
        },
        {
          "name": "isExported",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "isExported",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Module"
          ]
        },
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runtime",
      "methods": [
        {
          "name": "version",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Runtime$Version",
      "methods": [
        {
          "name": "feature",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.StackWalker"
    },
    {
      "type": "java.lang.StackWalker$Option"
    },
    {
      "type": "java.lang.StackWalker$StackFrame"
    },
    {
      "type": "java.lang.String",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.System",
      "methods": [
        {
          "name": "getSecurityManager",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.Void",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.WeakPairMap"
    },
    {
      "type": "java.lang.WeakPairMap$Pair"
    },
    {
      "type": "java.lang.WeakPairMap$Pair$Weak"
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.annotation.RetentionPolicy"
    },
    {
      "type": "java.lang.annotation.Target"
    },
    {
      "type": "java.lang.constant.ClassDesc"
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.constant.ConstantDesc"
    },
    {
      "type": "java.lang.constant.DirectMethodHandleDesc"
    },
    {
      "type": "java.lang.constant.DirectMethodHandleDesc$Kind"
    },
    {
      "type": "java.lang.constant.DynamicConstantDesc"
    },
    {
      "type": "java.lang.constant.MethodHandleDesc"
    },
    {
      "type": "java.lang.constant.MethodTypeDesc"
    },
    {
      "type": "java.lang.instrument.Instrumentation",
      "methods": [
        {
          "name": "redefineModule",
          "parameterTypes": [
            "java.lang.Module",
            "java.util.Set",
            "java.util.Map",
            "java.util.Map",
            "java.util.Set",
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.MethodHandle"
    },
    {
      "type": "java.lang.invoke.MethodHandles",
      "methods": [
        {
          "name": "lookup",
          "parameterTypes": []
        },
        {
          "name": "privateLookupIn",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.invoke.MethodHandles$Lookup"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.MethodHandles$Lookup",
      "methods": [
        {
          "name": "defineClass",
          "parameterTypes": [
            "byte[]"
          ]
        },
        {
          "name": "findVirtual",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.String",
            "java.lang.invoke.MethodType"
          ]
        },
        {
          "name": "lookupClass",
          "parameterTypes": []
        },
        {
          "name": "lookupModes",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.invoke.MethodType",
      "methods": [
        {
          "name": "methodType",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.Class[]"
          ]
        }
      ]
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.management.BufferPoolMXBean"
    },
    {
      "type": "java.lang.management.ClassLoadingMXBean"
    },
    {
      "type": "java.lang.management.CompilationMXBean"
    },
    {
      "type": "java.lang.management.LockInfo"
    },
    {
      "type": "java.lang.management.ManagementFactory",
      "methods": [
        {
          "name": "getRuntimeMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.MemoryMXBean"
    },
    {
      "type": "java.lang.management.MemoryManagerMXBean"
    },
    {
      "type": "java.lang.management.MemoryPoolMXBean"
    },
    {
      "type": "java.lang.management.MemoryUsage",
      "methods": [
        {
          "name": "from",
          "parameterTypes": [
            "javax.management.openmbean.CompositeData"
          ]
        }
      ]
    },
    {
      "type": "java.lang.management.MonitorInfo"
    },
    {
      "type": "java.lang.management.PlatformLoggingMXBean"
    },
    {
      "type": "java.lang.management.RuntimeMXBean",
      "methods": [
        {
          "name": "getInputArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.ThreadInfo"
    },
    {
      "type": "java.lang.reflect.AccessibleObject"
    },
    {
      "type": "java.lang.reflect.AnnotatedArrayType"
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.AnnotatedParameterizedType",
      "methods": [
        {
          "name": "getAnnotatedActualTypeArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedType",
      "methods": [
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.AnnotatedWildcardType"
    },
    {
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getAnnotatedExceptionTypes",
          "parameterTypes": []
        },
        {
          "name": "getAnnotatedParameterTypes",
          "parameterTypes": []
        },
        {
          "name": "getAnnotatedReceiverType",
          "parameterTypes": []
        },
        {
          "name": "getParameterCount",
          "parameterTypes": []
        },
        {
          "name": "getParameters",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Field"
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.Method",
      "methods": [
        {
          "name": "getAnnotatedReturnType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Parameter",
      "methods": [
        {
          "name": "getModifiers",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "isNamePresent",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.math.BigDecimal",
      "allDeclaredFields": true
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.security.AccessController",
      "methods": [
        {
          "name": "doPrivileged",
          "parameterTypes": [
            "java.security.PrivilegedAction"
          ]
        }
      ]
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.MessageDigestSpi"
    },
    {
      "type": "java.security.interfaces.DSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.DSAPublicKey"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.security.spec.DSAParameterSpec"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.util.Collection"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.EventListener"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.concurrent.Callable"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.ThreadPerTaskExecutor"
    },
    {
      "type": "java.util.logging.LogManager",
      "methods": [
        {
          "name": "getLoggingMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.logging.LoggingMXBean"
    },
    {
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.cache.CacheManager"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.management.MBeanOperationInfo"
    },
    {
      "type": "javax.management.MBeanServerBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.management.StandardEmitterMBean"
    },
    {
      "type": "javax.management.openmbean.CompositeData"
    },
    {
      "type": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
    },
    {
      "type": "javax.management.openmbean.TabularData"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.management.VirtualThreadSchedulerMXBean"
    },
    {
      "type": "jdk.management.jfr.ConfigurationInfo"
    },
    {
      "type": "jdk.management.jfr.EventTypeInfo"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBean"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBeanImpl"
    },
    {
      "type": "jdk.management.jfr.RecordingInfo"
    },
    {
      "type": "jdk.management.jfr.SettingDescriptorInfo"
    },
    {
      "type": "kotlin.Deprecated"
    },
    {
      "type": "kotlin.Metadata"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlin.jvm.JvmInline"
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "liquibase.integration.spring.SpringLiquibase"
    },
    {
      "type": "net.bytebuddy.agent.Installer",
      "methods": [
        {
          "name": "agentmain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.instrument.Instrumentation"
          ]
        },
        {
          "name": "getInstrumentation",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$AllArguments",
      "methods": [
        {
          "name": "includeSelf",
          "parameterTypes": []
        },
        {
          "name": "nullIfEmpty",
          "parameterTypes": []
        },
        {
          "name": "readOnly",
          "parameterTypes": []
        },
        {
          "name": "typing",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$Argument",
      "methods": [
        {
          "name": "optional",
          "parameterTypes": []
        },
        {
          "name": "readOnly",
          "parameterTypes": []
        },
        {
          "name": "typing",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$DynamicConstant"
    },
    {
      "type": "net.bytebuddy.asm.Advice$Enter",
      "methods": [
        {
          "name": "readOnly",
          "parameterTypes": []
        },
        {
          "name": "typing",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$Exit"
    },
    {
      "type": "net.bytebuddy.asm.Advice$FieldGetterHandle"
    },
    {
      "type": "net.bytebuddy.asm.Advice$FieldSetterHandle"
    },
    {
      "type": "net.bytebuddy.asm.Advice$Handle"
    },
    {
      "type": "net.bytebuddy.asm.Advice$Local"
    },
    {
      "type": "net.bytebuddy.asm.Advice$OnMethodEnter",
      "methods": [
        {
          "name": "inline",
          "parameterTypes": []
        },
        {
          "name": "prependLineNumber",
          "parameterTypes": []
        },
        {
          "name": "skipOn",
          "parameterTypes": []
        },
        {
          "name": "skipOnIndex",
          "parameterTypes": []
        },
        {
          "name": "suppress",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$OnMethodExit",
      "methods": [
        {
          "name": "backupArguments",
          "parameterTypes": []
        },
        {
          "name": "inline",
          "parameterTypes": []
        },
        {
          "name": "onThrowable",
          "parameterTypes": []
        },
        {
          "name": "repeatOn",
          "parameterTypes": []
        },
        {
          "name": "repeatOnIndex",
          "parameterTypes": []
        },
        {
          "name": "suppress",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$Origin"
    },
    {
      "type": "net.bytebuddy.asm.Advice$Return",
      "methods": [
        {
          "name": "readOnly",
          "parameterTypes": []
        },
        {
          "name": "typing",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$SelfCallHandle"
    },
    {
      "type": "net.bytebuddy.asm.Advice$This",
      "methods": [
        {
          "name": "optional",
          "parameterTypes": []
        },
        {
          "name": "readOnly",
          "parameterTypes": []
        },
        {
          "name": "typing",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.asm.Advice$Thrown"
    },
    {
      "type": "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable"
    },
    {
      "type": "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter"
    },
    {
      "type": "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedField$Dispatcher"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType"
    },
    {
      "type": "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType$AnnotatedWildcardType"
    },
    {
      "type": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles"
    },
    {
      "type": "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.AllArguments",
      "methods": [
        {
          "name": "includeSelf",
          "parameterTypes": []
        },
        {
          "name": "nullIfEmpty",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.Argument",
      "methods": [
        {
          "name": "bindingMechanic",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.Argument$BindingMechanic"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.BindingPriority",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.Default"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.DefaultCall"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.DefaultCallHandle"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.DefaultMethod"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.DefaultMethodHandle"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.DynamicConstant"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.FieldGetterHandle"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.FieldSetterHandle"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.FieldValue",
      "methods": [
        {
          "name": "declaringType",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.Handle"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.Origin",
      "methods": [
        {
          "name": "cache",
          "parameterTypes": []
        },
        {
          "name": "privileged",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.StubValue"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.Super"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.SuperCall",
      "methods": [
        {
          "name": "fallbackToDefault",
          "parameterTypes": []
        },
        {
          "name": "nullIfImpossible",
          "parameterTypes": []
        },
        {
          "name": "serializableProxy",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.SuperCallHandle"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.SuperMethod"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.SuperMethodHandle"
    },
    {
      "type": "net.bytebuddy.implementation.bind.annotation.This",
      "methods": [
        {
          "name": "optional",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.jar.asmjdkbridge.JdkClassReader"
    },
    {
      "type": "net.bytebuddy.utility.Invoker"
    },
    {
      "type": "net.bytebuddy.utility.Invoker$Dispatcher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher"
    },
    {
      "type": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfClassDesc"
    },
    {
      "type": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc"
    },
    {
      "type": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc$ForKind"
    },
    {
      "type": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDynamicConstantDesc"
    },
    {
      "type": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodHandleDesc"
    },
    {
      "type": "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodTypeDesc"
    },
    {
      "type": "net.bytebuddy.utility.JavaModule$Module"
    },
    {
      "type": "net.bytebuddy.utility.JavaModule$Resolver"
    },
    {
      "type": "org.apache.catalina.Manager"
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.HttpAsyncClients"
    },
    {
      "type": "org.apache.hc.client5.http.impl.classic.HttpClients"
    },
    {
      "type": "org.apache.hc.core5.reactive.ReactiveResponseConsumer"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.LoggerContext"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.maven.surefire.booter.spi.LegacyMasterProcessChannelProcessorFactory"
    },
    {
      "type": "org.apache.maven.surefire.booter.spi.SurefireMasterProcessChannelProcessorFactory"
    },
    {
      "type": "org.apache.maven.surefire.junitplatform.JUnitPlatformProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.apache.maven.surefire.api.provider.ProviderParameters"
          ]
        }
      ]
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsSci"
    },
    {
      "type": "org.apiguardian.api.API"
    },
    {
      "type": "org.apiguardian.api.API$Status"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.assertj.core.api.Assert"
    },
    {
      "type": "org.atteo.evo.inflector.English"
    },
    {
      "type": "org.bouncycastle.asn1.ASN1Sequence"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.cache2k.extra.micrometer.Cache2kCacheMetrics"
    },
    {
      "type": "org.cache2k.extra.spring.SpringCache2kCache"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.jakarta.server.config.JakartaWebSocketServletContainerInitializer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.elasticsearch.client.RestClient"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.client.JerseyClient"
    },
    {
      "type": "org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
    },
    {
      "type": "org.glassfish.jersey.server.ResourceConfig"
    },
    {
      "type": "org.glassfish.jersey.server.spring.SpringComponentProvider"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "type": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
      "methods": [
        {
          "name": "externalClassLoader",
          "parameterTypes": [
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.ConfigurationImpl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en_US"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_US"
    },
    {
      "type": "org.htmlunit.WebClient"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.joda.time.ReadableInstant"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.mockito.MockSettings"
    },
    {
      "type": "org.mockito.Mockito"
    },
    {
      "type": "org.mockito.configuration.MockitoConfiguration"
    },
    {
      "type": "org.mockito.internal.PremainAttach",
      "methods": [
        {
          "name": "getInstrumentation",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.configuration.DefaultDoNotMockEnforcer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.configuration.InjectingAnnotationEngine",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForEquals"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForHashCode"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForReadObject"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$ForStatic"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice$Identifier"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.access.MockAccess"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.access.MockMethodInterceptor$DispatcherDefaultingToRealMethod"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.access.MockMethodInterceptor$ForEquals"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.access.MockMethodInterceptor$ForHashCode"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.access.MockMethodInterceptor$ForWriteReplace"
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.codegen.ClienteMovimientoClient$MockitoMock$sbhkav1op99200N",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.codegen.FacturadorClient$MockitoMock$6ik9ci1op99200N",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.codegen.OrderNoteClient$MockitoMock$0j3vbf2op99200N",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.codegen.TransaccionFacturaProgramaDiaClient$MockitoMock$bpvf823op99200N",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher"
    },
    {
      "type": "org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.matchers.Any"
    },
    {
      "type": "org.mockito.internal.matchers.Equals"
    },
    {
      "type": "org.mockito.internal.matchers.InstanceOf"
    },
    {
      "type": "org.mockito.internal.util.ConsoleMockitoLogger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.mockito.internal.util.reflection.InstrumentationMemberAccessor$Dispatcher"
    },
    {
      "type": "org.mockito.internal.util.reflection.ModuleMemberAccessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.openqa.selenium.WebDriver"
    },
    {
      "type": "org.openqa.selenium.htmlunit.HtmlUnitDriver"
    },
    {
      "type": "org.opentest4j.TestAbortedException"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.LoggerFactory"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.SpecPropertiesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "additionalModelsConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "fileSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "globalOpenApiCustomizer",
          "parameterTypes": []
        },
        {
          "name": "initExtraSchemas",
          "parameterTypes": []
        },
        {
          "name": "localSpringDocParameterNameDiscoverer",
          "parameterTypes": []
        },
        {
          "name": "modelConverterRegistrar",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "openAPIBuilder",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "operationBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "org.springdoc.core.service.SecurityService",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "parameterBuilder",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider",
            "java.util.Optional"
          ]
        },
        {
          "name": "parameterObjectNamingStrategyCustomizer",
          "parameterTypes": []
        },
        {
          "name": "polymorphicModelConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "propertyResolverUtils",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableBeanFactory",
            "org.springframework.context.MessageSource",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        },
        {
          "name": "requestBodyBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "responseSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "schemaPropertyDeprecatingConverter",
          "parameterTypes": []
        },
        {
          "name": "securityParser",
          "parameterTypes": [
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springDocCustomizers",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional"
          ]
        },
        {
          "name": "springDocProviders",
          "parameterTypes": [
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "springdocObjectMapperProvider",
          "parameterTypes": [
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springdoc.core.configuration.SpringDocConfiguration"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "springDataWebPropertiesProvider",
          "parameterTypes": [
            "java.util.Optional"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webFluxSupportConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webConversionServiceProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocHateoasConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "collectionModelContentConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.HateoasHalProvider",
            "org.springframework.hateoas.server.LinkRelationProvider"
          ]
        },
        {
          "name": "hateoasHalProvider",
          "parameterTypes": [
            "java.util.Optional",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "hateoasLinksConverter",
          "parameterTypes": [
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "linksSchemaCustomizer",
          "parameterTypes": [
            "org.springdoc.core.providers.HateoasHalProvider",
            "org.springdoc.core.properties.SpringDocConfigProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.core.converters.AdditionalModelsConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.CollectionModelContentConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.FileSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.HateoasLinksConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.ModelConverterRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PolymorphicModelConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.ResponseSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.WebFluxSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiHateoasLinksCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.OperationIdCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.ParameterObjectNamingStrategyCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.PropertyCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.SpringDocCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.models.GroupedOpenApi"
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.providers.HateoasHalProvider",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.providers.ObjectMapperProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.RouterFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringDocProviders",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringWebProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.WebConversionServiceProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.AbstractRequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericParameterService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericResponseService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OpenAPIService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OperationService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.RequestBodyService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.SecurityService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.utils.Constants",
      "allPublicFields": true
    },
    {
      "type": "org.springdoc.core.utils.PropertyResolverUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerIndexTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerWelcome",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.api.OpenApiWebMvcResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "openApiResource",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectFactory",
            "org.springdoc.core.service.AbstractRequestService",
            "org.springdoc.core.service.GenericResponseService",
            "org.springdoc.core.service.OperationService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.providers.SpringDocProviders",
            "org.springdoc.core.customizers.SpringDocCustomizers"
          ]
        },
        {
          "name": "requestBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.GenericParameterService",
            "org.springdoc.core.service.RequestBodyService",
            "java.util.Optional",
            "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer"
          ]
        },
        {
          "name": "responseBuilder",
          "parameterTypes": [
            "org.springdoc.core.service.OperationService",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.utils.PropertyResolverUtils"
          ]
        },
        {
          "name": "springWebProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "routerFunctionProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.core.providers.RouterFunctionWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.providers.SpringWebMvcProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.core.service.RequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "indexPageTransformer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SwaggerUiOAuthProperties",
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
            "org.springdoc.core.providers.ObjectMapperProvider"
          ]
        },
        {
          "name": "swaggerConfigResource",
          "parameterTypes": [
            "org.springdoc.webmvc.ui.SwaggerWelcomeCommon"
          ]
        },
        {
          "name": "swaggerResourceResolver",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties"
          ]
        },
        {
          "name": "swaggerWebMvcConfigurer",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.webmvc.ui.SwaggerIndexTransformer",
            "java.util.Optional",
            "org.springdoc.webmvc.ui.SwaggerResourceResolver"
          ]
        },
        {
          "name": "swaggerWelcome",
          "parameterTypes": [
            "org.springdoc.core.properties.SwaggerUiConfigProperties",
            "org.springdoc.core.properties.SpringDocConfigProperties",
            "org.springdoc.core.providers.SpringWebProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerConfigResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexPageTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerIndexTransformer"
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeCommon",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.amqp.rabbit.core.RabbitTemplate"
    },
    {
      "type": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.Advised"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding"
    },
    {
      "type": "org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryInitializer"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationExcludeFilter"
    },
    {
      "type": "org.springframework.beans.factory.config.AbstractFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ApplicationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.LazyInitializationExcludeFilter"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.WebApplicationType"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventRepository"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryEndpointExposureOutcomeContributor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointCachingOperationInvokerAdvisor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "endpointOperationParameterMapper",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "propertiesEndpointAccessResolver",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.PropertiesEndpointAccessResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointObjectMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletExposeExcludePropertyEndpointFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletEndpointRegistrar",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
            "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
            "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "controllerEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "controllerExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        },
        {
          "name": "endpointMediaTypes",
          "parameterTypes": []
        },
        {
          "name": "pathMappedEndpoints",
          "parameterTypes": [
            "java.util.Collection"
          ]
        },
        {
          "name": "webAccessPropertiesOperationFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
          ]
        },
        {
          "name": "webEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webEndpointPathMapper",
          "parameterTypes": []
        },
        {
          "name": "webExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "controllerEndpointHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
          ]
        },
        {
          "name": "endpointObjectMapperWebMvcConfigurer",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
          ]
        },
        {
          "name": "webEndpointServletHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "pingHealthContributor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "healthContributorRegistry",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "java.util.Map",
            "java.util.Map"
          ]
        },
        {
          "name": "healthEndpoint",
          "parameterTypes": [
            "org.springframework.boot.actuate.health.HealthContributorRegistry",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthEndpointGroupMembershipValidator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
            "org.springframework.boot.actuate.health.HealthContributorRegistry"
          ]
        },
        {
          "name": "healthEndpointGroups",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthEndpointGroupsBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "healthHttpCodeStatusMapper",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthStatusAggregator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "healthEndpointWebExtension",
          "parameterTypes": [
            "org.springframework.boot.actuate.health.HealthContributorRegistry",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "healthEndpointWebMvcHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
            "org.springframework.boot.actuate.health.HealthEndpointGroups"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveHealthContributorRegistry",
          "parameterTypes": [
            "java.util.Map",
            "java.util.Map",
            "org.springframework.boot.actuate.health.HealthEndpointGroups"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "classLoaderMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmCompilationMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmGcMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmHeapPressureMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmInfoMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmMemoryMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmThreadMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "logbackMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "meterRegistryCloser",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "meterRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "micrometerClock",
          "parameterTypes": []
        },
        {
          "name": "propertiesMeterFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceMetrics",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        },
        {
          "name": "fileDescriptorMetrics",
          "parameterTypes": []
        },
        {
          "name": "processorMetrics",
          "parameterTypes": []
        },
        {
          "name": "uptimeMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "simpleConfig",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
          ]
        },
        {
          "name": "simpleMeterRegistry",
          "parameterTypes": [
            "io.micrometer.core.instrument.simple.SimpleConfig",
            "io.micrometer.core.instrument.Clock"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "startupTimeMetrics",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bindTaskExecutorsToRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        },
        {
          "name": "eagerTaskExecutorMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatMetricsBinder",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRegistry",
          "parameterTypes": []
        },
        {
          "name": "observationRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "propertiesObservationFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultMeterObservationHandler",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsObservationHandlerGrouping",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpClientUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRestClientCustomizer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRestTemplateCustomizer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webMvcObservationFilter",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpServerUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observabilitySchedulingConfigurer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "sslHealthIndicator",
          "parameterTypes": [
            "org.springframework.boot.info.SslInfo"
          ]
        },
        {
          "name": "sslInfo",
          "parameterTypes": [
            "org.springframework.boot.ssl.SslBundles",
            "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslMeterBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslObservabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "sslMeterBinder",
          "parameterTypes": [
            "org.springframework.boot.info.SslInfo",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceHealthIndicator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansTestExecutionListener"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "managementServletContext",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "servletWebChildContextFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.cache.CachesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.ShutdownEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.AdditionalPathsMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Health"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroups"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.HttpCodeStatusMapper"
    },
    {
      "type": "org.springframework.boot.actuate.health.PingHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.StatusAggregator"
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LoggersEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.client.ObservationRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.sbom.SbomEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.ssl.SslHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "forceAutoProxyCreatorToUseClassProxying",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBooleanProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
      "methods": [
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "gson",
          "parameterTypes": [
            "com.google.gson.GsonBuilder"
          ]
        },
        {
          "name": "gsonBuilder",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "standardGsonBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.gson.GsonProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.hateoas.HateoasProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "isUseHalAsDefaultJsonMediaType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationJsonHalConfiguration",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration$HypermediaConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.ConditionalOnPreferredJsonMapper"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.ConditionalOnPreferredJsonMapper$JsonMapper"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "messageConverters",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "stringHttpMessageConverter",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mappingJackson2HttpMessageConverter",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.OnPreferredJsonMapperCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.http.client.HttpClientProperties"
          ]
        },
        {
          "name": "clientHttpRequestFactoryBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "clientHttpRequestFactorySettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.AbstractClientHttpConnectorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties"
          ]
        },
        {
          "name": "clientHttpConnectorBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "clientHttpConnectorSettings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.ConditionalOnClientHttpConnectorBuilderDetection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.reactive.HttpReactiveClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutorAsyncConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bootstrapExecutorAliasPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$OnExecutorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationTaskExecutor",
          "parameterTypes": [
            "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultValidator",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "methodValidationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "httpMessageConvertersRestClientCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientBuilderConfigurer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restClientSsl",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServlet",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServletRegistration",
          "parameterTypes": [
            "org.springframework.web.servlet.DispatcherServlet",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "characterEncodingFilter",
          "parameterTypes": []
        },
        {
          "name": "localeCharsetMappingsCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
          ]
        },
        {
          "name": "multipartConfigElement",
          "parameterTypes": []
        },
        {
          "name": "multipartResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "servletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "tomcatServletWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tomcatServletWebServerFactory",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "formContentFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ListableBeanFactory"
          ]
        },
        {
          "name": "flashMapManager",
          "parameterTypes": []
        },
        {
          "name": "localeResolver",
          "parameterTypes": []
        },
        {
          "name": "mvcContentNegotiationManager",
          "parameterTypes": []
        },
        {
          "name": "mvcConversionService",
          "parameterTypes": []
        },
        {
          "name": "mvcValidator",
          "parameterTypes": []
        },
        {
          "name": "themeResolver",
          "parameterTypes": []
        },
        {
          "name": "viewNameTranslator",
          "parameterTypes": []
        },
        {
          "name": "welcomePageHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "welcomePageNotAcceptableHandlerMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "resourceHandlerRegistrationCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "defaultViewResolver",
          "parameterTypes": []
        },
        {
          "name": "requestContextFilter",
          "parameterTypes": []
        },
        {
          "name": "viewResolver",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "basicErrorController",
          "parameterTypes": [
            "org.springframework.boot.web.servlet.error.ErrorAttributes",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorPageCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
          ]
        },
        {
          "name": "preserveErrorControllerTargetClassPostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        },
        {
          "name": "conventionErrorViewResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "beanNameViewResolver",
          "parameterTypes": []
        },
        {
          "name": "defaultErrorView",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver"
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "websocketServletWebServerCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudPlatform"
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.BindResult"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.http.client.AbstractClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.HttpComponentsClientHttpRequestFactoryBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.AbstractClientHttpConnectorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ClientHttpConnectorBuilder"
    },
    {
      "type": "org.springframework.boot.http.client.reactive.ClientHttpConnectorSettings",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.http.client.reactive.JdkClientHttpConnectorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.info.BuildProperties"
    },
    {
      "type": "org.springframework.boot.info.GitProperties"
    },
    {
      "type": "org.springframework.boot.info.SslInfo",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ClassPathResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.core.AutoConfigureCache"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.json.AutoConfigureJson"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.properties.PropertyMapping"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.properties.SkipPropertyMapping"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureWebMvc"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherServlet",
          "parameterTypes": [
            "org.springframework.test.web.servlet.MockMvc"
          ]
        },
        {
          "name": "dispatcherServletPath",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.web.context.WebApplicationContext",
            "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
          ]
        },
        {
          "name": "mockMvc",
          "parameterTypes": [
            "org.springframework.test.web.servlet.MockMvcBuilder"
          ]
        },
        {
          "name": "mockMvcBuilder",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "springBootMockMvcBuilderCustomizer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.MockMvcTesterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mockMvcTester",
          "parameterTypes": [
            "org.springframework.test.web.servlet.MockMvc",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.SpringBootMockMvcBuilderCustomizer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setAddFilters",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setPrintOnlyOnFailure",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest"
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.ImportsContextCustomizer$ImportsCleanupPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.ImportsContextCustomizer$ImportsConfiguration"
    },
    {
      "type": "org.springframework.boot.test.context.ImportsContextCustomizer$ImportsSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.ImportsContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.SpringBootContextLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.SpringBootTest"
    },
    {
      "type": "org.springframework.boot.test.context.SpringBootTestContextBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.filter.ExcludeFilterApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.graphql.tester.HttpGraphQlTesterContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Set"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.test.mock.mockito.MockitoPostProcessor"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.SpringBootTestRandomPortEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.client.TestRestTemplateContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.RestClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder"
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrar"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.FilterRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.RegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletContextInitializer"
    },
    {
      "type": "org.springframework.boot.web.servlet.ServletRegistrationBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletContextResourceFilePathResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.servlet.error.ErrorController"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFilter"
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Encoding",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.ServletWebServerFactory"
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCache"
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheInterceptor"
    },
    {
      "type": "org.springframework.cache.jcache.JCacheCache"
    },
    {
      "type": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "configurationPropertiesBeans",
          "parameterTypes": []
        },
        {
          "name": "configurationPropertiesRebinder",
          "parameterTypes": [
            "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "environmentManager",
          "parameterTypes": [
            "org.springframework.core.env.ConfigurableEnvironment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "configDataContextRefresher",
          "parameterTypes": [
            "org.springframework.context.ConfigurableApplicationContext",
            "org.springframework.cloud.context.scope.refresh.RefreshScope",
            "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"
          ]
        },
        {
          "name": "loggingRebinder",
          "parameterTypes": []
        },
        {
          "name": "refreshEventListener",
          "parameterTypes": [
            "org.springframework.cloud.context.refresh.ContextRefresher"
          ]
        },
        {
          "name": "refreshScope",
          "parameterTypes": []
        },
        {
          "name": "refreshScopeLifecycle",
          "parameterTypes": [
            "org.springframework.cloud.context.refresh.ContextRefresher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "refreshScopeHealthIndicator",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration"
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.marker.Marker"
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.actuator.FeaturesEndpoint"
    },
    {
      "type": "org.springframework.cloud.client.actuator.HasFeatures",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.circuitbreaker.CircuitBreaker"
    },
    {
      "type": "org.springframework.cloud.client.discovery.DiscoveryClient"
    },
    {
      "type": "org.springframework.cloud.client.discovery.EnableDiscoveryClient"
    },
    {
      "type": "org.springframework.cloud.client.discovery.EnableDiscoveryClientImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "compositeDiscoveryClient",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setInet",
          "parameterTypes": [
            "org.springframework.cloud.commons.util.InetUtils"
          ]
        },
        {
          "name": "setServer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "simpleDiscoveryClient",
          "parameterTypes": [
            "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
          ]
        },
        {
          "name": "simpleDiscoveryProperties",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.hypermedia.RemoteResource"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.AbstractLoadBalancerBlockingBuilderBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerInterceptor"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.BlockingRestClassesPresentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalanced"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancedRetryFactory"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "loadBalancedRestTemplateInitializerDeprecated",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "loadBalancerRequestFactory",
          "parameterTypes": [
            "org.springframework.cloud.client.loadbalancer.LoadBalancerClient"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "deferringLoadBalancerInterceptor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "lbRestClientPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "lbRestTemplateBuilderPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "loadBalancerInterceptor",
          "parameterTypes": [
            "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
            "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory"
          ]
        },
        {
          "name": "restTemplateCustomizer",
          "parameterTypes": [
            "org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerClient"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "loadBalancerClientsDefaultsMappingsProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestTransformer"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRestClientBuilderBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRestTemplateBuilderBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration"
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistry"
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultsBindHandlerAdvisor",
          "parameterTypes": [
            "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider"
    },
    {
      "type": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtilsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "inetUtils",
          "parameterTypes": [
            "org.springframework.cloud.commons.util.InetUtilsProperties"
          ]
        },
        {
          "name": "inetUtilsProperties",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigServerInstanceProvider"
    },
    {
      "type": "org.springframework.cloud.config.server.config.ConfigServerProperties"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifier"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "compositeCompatibilityVerifier",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "sleuthPresentVerifier",
          "parameterTypes": []
        },
        {
          "name": "springBootVersionVerifier",
          "parameterTypes": [
            "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SleuthPresentVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.TlsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.environment.EnvironmentManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.named.NamedContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.named.NamedContextFactory$Specification"
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.ContextRefresher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.RefreshScopeLifecycle",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.context.scope.refresh.RefreshScope"
    },
    {
      "type": "org.springframework.cloud.endpoint.RefreshEndpoint"
    },
    {
      "type": "org.springframework.cloud.endpoint.event.RefreshEventListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
    },
    {
      "type": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient"
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Class[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients"
    },
    {
      "type": "org.springframework.cloud.loadbalancer.aot.LoadBalancerChildContextInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.cache.CaffeineBasedLoadBalancerCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager"
    },
    {
      "type": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "blockingLoadBalancerClient",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
          ]
        },
        {
          "name": "loadBalancerServiceInstanceCookieTransformer",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
          ]
        },
        {
          "name": "xForwarderHeadersTransformer",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "loadBalancerChildContextInitializer",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "loadBalancerClientFactory",
          "parameterTypes": [
            "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "loadBalancerEagerContextInitializer",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
            "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties"
          ]
        },
        {
          "name": "zoneConfig",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$CaffeineLoadBalancerCacheManagerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "caffeineLoadBalancerCacheManager",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.logging.LoggingRebinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.RestClientTimeoutProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.TimeoutProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "tlsProperties",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$OnJerseyClientNotPresentOrNotEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$OnJerseyClientPresentAndEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$OnRestClientPresentAndEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$OnRestTemplatePresentAndEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$RestTemplateConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultEurekaClientHttpRequestFactorySupplier",
          "parameterTypes": [
            "org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties",
            "java.util.Set"
          ]
        },
        {
          "name": "restTemplateDiscoveryClientOptionalArgs",
          "parameterTypes": [
            "org.springframework.cloud.configuration.TlsProperties",
            "org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "restTemplateTransportClientFactories",
          "parameterTypes": [
            "org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.http.DefaultEurekaClientHttpRequestFactorySupplier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactories",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.DefaultFeignLoggerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.DefaultTargeter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.EnableFeignClients"
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "feignChildContextInitializer",
          "parameterTypes": [
            "org.springframework.context.support.GenericApplicationContext",
            "org.springframework.cloud.openfeign.FeignClientFactory"
          ]
        },
        {
          "name": "feignClientBeanFactoryInitializationCodeGenerator",
          "parameterTypes": [
            "org.springframework.context.support.GenericApplicationContext",
            "org.springframework.cloud.openfeign.FeignClientFactory"
          ]
        },
        {
          "name": "feignContext",
          "parameterTypes": []
        },
        {
          "name": "feignFeature",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignAutoConfiguration$DefaultFeignTargeterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "feignTargeter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignCircuitBreakerDisabledConditions",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClient",
      "methods": [
        {
          "name": "configuration",
          "parameterTypes": []
        },
        {
          "name": "contextId",
          "parameterTypes": []
        },
        {
          "name": "dismiss404",
          "parameterTypes": []
        },
        {
          "name": "fallback",
          "parameterTypes": []
        },
        {
          "name": "fallbackFactory",
          "parameterTypes": []
        },
        {
          "name": "name",
          "parameterTypes": []
        },
        {
          "name": "path",
          "parameterTypes": []
        },
        {
          "name": "primary",
          "parameterTypes": []
        },
        {
          "name": "qualifiers",
          "parameterTypes": []
        },
        {
          "name": "url",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setContextId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setDismiss404",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setFallback",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "setFallbackFactory",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPath",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setQualifiers",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "setRefreshableClient",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setType",
          "parameterTypes": [
            "java.lang.Class"
          ]
        },
        {
          "name": "setUrl",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientMicrometerEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientSpecification",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.Class[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "feignClientConfigurer",
          "parameterTypes": []
        },
        {
          "name": "feignContract",
          "parameterTypes": [
            "org.springframework.core.convert.ConversionService"
          ]
        },
        {
          "name": "feignConversionService",
          "parameterTypes": []
        },
        {
          "name": "feignDecoder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "feignEncoder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "feignLoggerFactory",
          "parameterTypes": []
        },
        {
          "name": "feignRetryer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsConfiguration$1",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsConfiguration$DefaultFeignBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "feignBuilder",
          "parameterTypes": [
            "feign.Retryer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsConfiguration$SpringPojoFormEncoder"
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignClientsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.FeignLoggerFactory"
    },
    {
      "type": "org.springframework.cloud.openfeign.Targeter"
    },
    {
      "type": "org.springframework.cloud.openfeign.aot.FeignChildContextInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.aot.FeignClientBeanFactoryInitializationAotProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.clientconfig.FeignClientConfigurer"
    },
    {
      "type": "org.springframework.cloud.openfeign.encoding.OkHttpFeignClientBeanMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.hateoas.FeignHalAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webConvertersCustomizer",
          "parameterTypes": [
            "org.springframework.hateoas.config.WebConverters"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.hateoas.WebConvertersCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.DefaultFeignLoadBalancerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "feignClient",
          "parameterTypes": [
            "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.FeignBlockingLoadBalancerClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.FeignLoadBalancerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "xForwarderHeadersFeignTransformer",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.Http2ClientFeignLoadBalancerConfiguration"
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.HttpClient5FeignLoadBalancerConfiguration"
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.LoadBalancerFeignRequestTransformer"
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.OkHttpFeignLoadBalancerConfiguration"
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.OnRetryNotEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.loadbalancer.XForwardedHeadersTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.support.FeignEncoderProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.support.FeignHttpClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.openfeign.support.HttpMessageConverterCustomizer"
    },
    {
      "type": "org.springframework.cloud.openfeign.support.SpringEncoder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.openfeign.support.SpringMvcContract",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.sleuth.Tracer"
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled"
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled"
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisherAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener",
      "fields": [
        {
          "name": "supportsAsyncExecution"
        }
      ]
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.SmartApplicationListener"
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.core.DefaultParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.ParameterNameDiscoverer"
    },
    {
      "type": "org.springframework.core.PrioritizedParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.env.EnvironmentCapable"
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.domain.Page"
    },
    {
      "type": "org.springframework.data.domain.Pageable"
    },
    {
      "type": "org.springframework.data.domain.Sort"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
    },
    {
      "type": "org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCache"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.repository.Repository"
    },
    {
      "type": "org.springframework.data.rest.core.config.RepositoryRestConfiguration"
    },
    {
      "type": "org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.graphql.test.tester.HttpGraphQlTester"
    },
    {
      "type": "org.springframework.hateoas.CollectionModel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.hateoas.Link"
    },
    {
      "type": "org.springframework.hateoas.client.JsonPathLinkDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.client.LinkDiscoverer"
    },
    {
      "type": "org.springframework.hateoas.client.LinkDiscoverers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.config.EnableHypermediaSupport"
    },
    {
      "type": "org.springframework.hateoas.config.EnableHypermediaSupport$HypermediaType"
    },
    {
      "type": "org.springframework.hateoas.config.EntityLinksConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "delegatingEntityLinks",
          "parameterTypes": [
            "org.springframework.plugin.core.PluginRegistry"
          ]
        },
        {
          "name": "entityLinksPluginRegistry",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.config.HateoasConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "_relProvider",
          "parameterTypes": [
            "org.springframework.plugin.core.PluginRegistry"
          ]
        },
        {
          "name": "annotationRelProvider",
          "parameterTypes": []
        },
        {
          "name": "defaultRelProvider",
          "parameterTypes": []
        },
        {
          "name": "hypermediaWebMvcConverters",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "java.util.List",
            "java.util.Optional"
          ]
        },
        {
          "name": "linkDiscoverers",
          "parameterTypes": [
            "org.springframework.plugin.core.PluginRegistry"
          ]
        },
        {
          "name": "messageResolver",
          "parameterTypes": []
        },
        {
          "name": "relProviderPluginRegistry",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.config.HypermediaConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.config.HypermediaMappingInformation"
    },
    {
      "type": "org.springframework.hateoas.config.RestTemplateHateoasConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "hypermediaRestTemplateBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.config.RestTemplateHateoasConfiguration$HypermediaRestTemplateBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.config.WebConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.config.WebMvcEntityLinksConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webMvcEntityLinks",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.config.WebMvcHateoasConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "hypermediaRepresentionModelProcessorConfigurator",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "hypermediaWebMvcConfigurer",
          "parameterTypes": [
            "org.springframework.hateoas.config.WebConverters"
          ]
        },
        {
          "name": "representationModelProcessorInvoker",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "webMvcLinkBuilderFactory",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.config.WebMvcHateoasConfiguration$HypermediaRepresentationModelBeanProcessorPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.config.WebMvcHateoasConfiguration$HypermediaWebMvcConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.config.WebStackImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.config.WebTestHateoasConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.mediatype.DefaultOnlyMessageResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.mediatype.MessageResolver"
    },
    {
      "type": "org.springframework.hateoas.mediatype.collectionjson.CollectionJsonMediaTypeConfigurationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.mediatype.hal.HalConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.mediatype.hal.HalLinkDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.hateoas.server.LinkRelationProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.hateoas.mediatype.MessageResolver",
            "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
          ]
        },
        {
          "name": "halLinkDisocoverer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.mediatype.hal.HalMediaTypeConfigurationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.mediatype.hal.forms.HalFormsMediaTypeConfigurationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.mediatype.problem.HttpProblemDetailsConfigurationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.mediatype.uber.UberMediaTypeConfigurationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.server.EntityLinks"
    },
    {
      "type": "org.springframework.hateoas.server.LinkBuilderFactory"
    },
    {
      "type": "org.springframework.hateoas.server.LinkRelationProvider"
    },
    {
      "type": "org.springframework.hateoas.server.MethodLinkBuilderFactory"
    },
    {
      "type": "org.springframework.hateoas.server.core.AnnotationLinkRelationProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.server.core.ControllerEntityLinksFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.server.core.DefaultLinkRelationProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.server.core.DelegatingEntityLinks",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.server.core.DelegatingLinkRelationProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.server.mvc.RepresentationModelProcessorInvoker",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter"
    },
    {
      "type": "org.springframework.hateoas.server.mvc.WebMvcLinkBuilderFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpStatus"
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestInterceptor"
    },
    {
      "type": "org.springframework.http.client.ReactorResourceFactory"
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.AbstractHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.GenericHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.StringHttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.GsonHttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.integration.graph.IntegrationGraphServer"
    },
    {
      "type": "org.springframework.integration.monitor.IntegrationMBeanExporter"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedAttribute"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedOperation"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedResource"
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.ldap.core.LdapOperations"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.plugin.core.OrderAwarePluginRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.plugin.core.Plugin"
    },
    {
      "type": "org.springframework.plugin.core.PluginRegistry"
    },
    {
      "type": "org.springframework.plugin.core.PluginRegistrySupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.plugin.core.SimplePluginRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.plugin.core.config.EnablePluginRegistries"
    },
    {
      "type": "org.springframework.plugin.core.config.PluginRegistriesBeanDefinitionRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.plugin.core.support.AbstractTypeAwareSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setType",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.plugin.core.support.PluginRegistryFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.restdocs.ManualRestDocumentation"
    },
    {
      "type": "org.springframework.retry.support.RetryTemplate"
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.annotation.AsyncConfigurer"
    },
    {
      "type": "org.springframework.scheduling.annotation.SchedulingConfigurer"
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.config.annotation.web.WebSecurityConfigurer"
    },
    {
      "type": "org.springframework.security.config.annotation.web.builders.HttpSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.RsaAlgorithm"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.RsaSecretEncryptor"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.TextEncryptor"
    },
    {
      "type": "org.springframework.security.oauth2.client.OAuth2AuthorizedClientManager"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistration"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors"
    },
    {
      "type": "org.springframework.security.web.SecurityFilterChain"
    },
    {
      "type": "org.springframework.security.web.util.matcher.RequestMatcher"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.test.context.BootstrapWith"
    },
    {
      "type": "org.springframework.test.context.bean.override.BeanOverride"
    },
    {
      "type": "org.springframework.test.context.bean.override.BeanOverrideContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.bean.override.mockito.MockitoBean"
    },
    {
      "type": "org.springframework.test.context.bean.override.mockito.MockitoBeanOverrideProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.bean.override.mockito.MockitoResetTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.bean.override.mockito.SpringMockResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.event.ApplicationEventsTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.event.EventPublishingTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener"
    },
    {
      "type": "org.springframework.test.context.junit.jupiter.SpringExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.observation.MicrometerObservationRegistryTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.CommonCachesTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DefaultBootstrapContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class",
            "org.springframework.test.context.CacheAwareContextLoaderDelegate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DefaultTestContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.test.context.support.DefaultTestContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DependencyInjectionTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DirtiesContextTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DynamicPropertiesContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.support.DynamicPropertyRegistrarBeanInitializer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.transaction.TransactionalTestExecutionListener"
    },
    {
      "type": "org.springframework.test.context.web.ServletTestExecutionListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.context.web.WebAppConfiguration"
    },
    {
      "type": "org.springframework.test.context.web.socket.MockServerContainerContextCustomizerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.test.web.reactive.server.WebTestClient"
    },
    {
      "type": "org.springframework.test.web.servlet.MockMvc",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.test.web.servlet.MockMvcBuilder"
    },
    {
      "type": "org.springframework.test.web.servlet.MockMvcBuilderSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.test.web.servlet.TestDispatcherServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.test.web.servlet.assertj.MockMvcTester",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.test.web.servlet.setup.ConfigurableMockMvcBuilder"
    },
    {
      "type": "org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.util.AntPathMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.PathMatcher"
    },
    {
      "type": "org.springframework.validation.SmartValidator"
    },
    {
      "type": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.accept.ContentNegotiationStrategy"
    },
    {
      "type": "org.springframework.web.accept.MediaTypeFileExtensionResolver"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping",
      "methods": [
        {
          "name": "consumes",
          "parameterTypes": []
        },
        {
          "name": "headers",
          "parameterTypes": []
        },
        {
          "name": "name",
          "parameterTypes": []
        },
        {
          "name": "params",
          "parameterTypes": []
        },
        {
          "name": "path",
          "parameterTypes": []
        },
        {
          "name": "produces",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.PathVariable",
      "methods": [
        {
          "name": "name",
          "parameterTypes": []
        },
        {
          "name": "required",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.bind.annotation.PostMapping",
      "methods": [
        {
          "name": "consumes",
          "parameterTypes": []
        },
        {
          "name": "headers",
          "parameterTypes": []
        },
        {
          "name": "name",
          "parameterTypes": []
        },
        {
          "name": "params",
          "parameterTypes": []
        },
        {
          "name": "path",
          "parameterTypes": []
        },
        {
          "name": "produces",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestBody",
      "methods": [
        {
          "name": "required",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestParam",
      "methods": [
        {
          "name": "defaultValue",
          "parameterTypes": []
        },
        {
          "name": "name",
          "parameterTypes": []
        },
        {
          "name": "required",
          "parameterTypes": []
        },
        {
          "name": "value",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestControllerAdvice"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestClientException"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.ServletContextAware"
    },
    {
      "type": "org.springframework.web.context.WebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.request.RequestContextListener"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.ServletContextResource"
    },
    {
      "type": "org.springframework.web.context.support.WebApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.FormContentFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.GenericFilterBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.OncePerRequestFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.RequestContextFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver"
    },
    {
      "type": "org.springframework.web.method.support.CompositeUriComponentsContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.method.support.UriComponentsContributor"
    },
    {
      "type": "org.springframework.web.multipart.MultipartResolver"
    },
    {
      "type": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.config.EnableWebFlux"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClientException"
    },
    {
      "type": "org.springframework.web.server.session.WebSessionManager"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.FlashMapManager"
    },
    {
      "type": "org.springframework.web.servlet.FrameworkServlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.servlet.HandlerExceptionResolver"
    },
    {
      "type": "org.springframework.web.servlet.HandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.HttpServletBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.LocaleResolver"
    },
    {
      "type": "org.springframework.web.servlet.RequestToViewNameTranslator"
    },
    {
      "type": "org.springframework.web.servlet.ThemeResolver"
    },
    {
      "type": "org.springframework.web.servlet.View"
    },
    {
      "type": "org.springframework.web.servlet.ViewResolver"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.EnableWebMvc"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "beanNameHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "defaultServletHandlerMapping",
          "parameterTypes": []
        },
        {
          "name": "handlerExceptionResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "httpRequestHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "mvcPathMatcher",
          "parameterTypes": []
        },
        {
          "name": "mvcPatternParser",
          "parameterTypes": []
        },
        {
          "name": "mvcResourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "mvcUriComponentsContributor",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
          ]
        },
        {
          "name": "mvcUrlPathHelper",
          "parameterTypes": []
        },
        {
          "name": "mvcViewResolver",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager"
          ]
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.accept.ContentNegotiationManager",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "simpleControllerHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewControllerHandlerMapping",
          "parameterTypes": [
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.servlet.resource.ResourceUrlProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.servlet.function.RouterFunction"
    },
    {
      "type": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler"
    },
    {
      "type": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.handler.MatchableHandlerMapping"
    },
    {
      "type": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AbstractLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.AbstractResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.LiteWebJarsResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceResolver"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceTransformer"
    },
    {
      "type": "org.springframework.web.servlet.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.AbstractFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.SessionFlashMapManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.support.WebContentGenerator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.AbstractThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.theme.FixedThemeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.AbstractCachingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.BeanNameViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.InternalResourceViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.UrlBasedViewResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.servlet.view.ViewResolverComposite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.web.util.UrlPathHelper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.util.pattern.PathPatternParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ws.test.client.MockWebServiceServer"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.testng.SkipException"
    },
    {
      "type": "org.thymeleaf.dialect.IDialect"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.webjars.WebJarVersionLocator"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "sun.management.ClassLoadingImpl"
    },
    {
      "type": "sun.management.CompilationImpl"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$1"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl"
    },
    {
      "type": "sun.management.MemoryImpl"
    },
    {
      "type": "sun.management.MemoryManagerImpl"
    },
    {
      "type": "sun.management.MemoryPoolImpl"
    },
    {
      "type": "sun.management.RuntimeImpl"
    },
    {
      "type": "sun.misc.SharedSecrets"
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSAKeyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSAParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "zipkin2.reporter.Encoding"
    },
    {
      "type": {
        "proxy": [
          "eterea.isolate.service.client.core.ArticuloClient"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "eterea.isolate.service.client.core.ClienteMovimientoClient"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "eterea.isolate.service.client.core.facade.FacturacionClient"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "eterea.isolate.service.client.core.facade.TransaccionFacturaProgramaDiaClient"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "eterea.isolate.service.client.pyafipws.FacturadorClient"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "eterea.isolate.service.client.web.OrderNoteClient"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.util.List",
          "org.springframework.aop.SpringProxy",
          "org.springframework.aop.framework.Advised",
          "org.springframework.core.DecoratingProxy"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.method.MethodDescription$InDefinedShape$AbstractBase$Executable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.method.ParameterDescription$ForLoadedParameter$Parameter"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.method.ParameterList$ForLoadedExecutable$Executable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDefinition$Sort$AnnotatedType"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$ForLoadedType$Dispatcher"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableExceptionType$Dispatcher"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedExecutableParameterType$Dispatcher"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedField$Dispatcher"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$Delegator$ForLoadedMethodReturnType$Dispatcher"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForComponentType$AnnotatedParameterizedType"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForTypeArgument$AnnotatedParameterizedType"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.description.type.TypeDescription$Generic$AnnotationReader$ForWildcardUpperBoundType$AnnotatedWildcardType"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.dynamic.loading.ClassInjector$UsingLookup$MethodHandles$Lookup"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfClassDesc"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDirectMethodHandleDesc$ForKind"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfDynamicConstantDesc"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodHandleDesc"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaConstant$Simple$Dispatcher$OfMethodTypeDesc"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaModule$Module"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "net.bytebuddy.utility.JavaModule$Resolver"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.test.context.SpringBootTest"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.context.annotation.Import"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.stereotype.Controller"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.test.context.BootstrapWith"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.test.context.bean.override.BeanOverride"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.test.context.bean.override.mockito.MockitoBean"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ControllerAdvice"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.ExceptionHandler"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.PathVariable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestParam"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": ""
    },
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/resources"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/resources/webjars-locator.properties"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/com.fasterxml.jackson.databind.Module"
    },
    {
      "glob": "META-INF/services/io.swagger.v3.core.converter.ModelConverter"
    },
    {
      "glob": "META-INF/services/jakarta.el.ExpressionFactory"
    },
    {
      "glob": "META-INF/services/jakarta.validation.ConstraintValidator"
    },
    {
      "glob": "META-INF/services/jakarta.validation.spi.ValidationProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.valueextraction.ValueExtractor"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.spi.ResourceBundleControlProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.transform.TransformerFactory"
    },
    {
      "glob": "META-INF/services/org.apache.maven.surefire.spi.MasterProcessChannelProcessorFactory"
    },
    {
      "glob": "META-INF/services/org.junit.platform.commons.support.scanning.ClasspathScanner"
    },
    {
      "glob": "META-INF/services/org.junit.platform.engine.TestEngine"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.LauncherDiscoveryListener"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.LauncherSessionListener"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.PostDiscoveryFilter"
    },
    {
      "glob": "META-INF/services/org.junit.platform.launcher.TestExecutionListener"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.replacements"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.test.autoconfigure.core.AutoConfigureCache.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.test.autoconfigure.json.AutoConfigureJson.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureWebMvc.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest.imports"
    },
    {
      "glob": "META-INF/validation.xml"
    },
    {
      "glob": "application-default.properties"
    },
    {
      "glob": "application-default.xml"
    },
    {
      "glob": "application-default.yaml"
    },
    {
      "glob": "application-default.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "config/application-default.properties"
    },
    {
      "glob": "config/application-default.xml"
    },
    {
      "glob": "config/application-default.yaml"
    },
    {
      "glob": "config/application-default.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "eterea/isolate/service"
    },
    {
      "glob": "eterea/isolate/service/IsolateServiceApplicationTests-context.xml"
    },
    {
      "glob": "eterea/isolate/service/IsolateServiceApplicationTestsContext.groovy"
    },
    {
      "glob": "eterea/isolate/service/configuration/IsolateServiceConfiguration.class"
    },
    {
      "glob": "eterea/isolate/service/controller"
    },
    {
      "glob": "eterea/isolate/service/controller/RellenadorController.class"
    },
    {
      "glob": "eterea/isolate/service/controller/RellenadorControllerTest-context.xml"
    },
    {
      "glob": "eterea/isolate/service/controller/RellenadorControllerTest.class"
    },
    {
      "glob": "eterea/isolate/service/controller/RellenadorControllerTestContext.groovy"
    },
    {
      "glob": "eterea/isolate/service/model/dto/ArticuloMovimientoDto.class"
    },
    {
      "glob": "eterea/isolate/service/model/dto/ClienteMovimientoDto.class"
    },
    {
      "glob": "eterea/isolate/service/model/dto/DatoUnaFacturaDto.class"
    },
    {
      "glob": "eterea/isolate/service/model/dto/FacturaResponseDto.class"
    },
    {
      "glob": "eterea/isolate/service/model/dto/core/FacturacionDto.class"
    },
    {
      "glob": "eterea/isolate/service/service"
    },
    {
      "glob": "eterea/isolate/service/service/RellenadorService.class"
    },
    {
      "glob": "eterea/isolate/service/service/RellenadorServiceTest-context.xml"
    },
    {
      "glob": "eterea/isolate/service/service/RellenadorServiceTestContext.groovy"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "io/swagger/v3/oas/annotations/Hidden.class"
    },
    {
      "glob": "jakarta/servlet/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_en.properties"
    },
    {
      "glob": "jakarta/servlet/LocalStrings_en_US.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_en.properties"
    },
    {
      "glob": "jakarta/servlet/http/LocalStrings_en_US.properties"
    },
    {
      "glob": "jndi.properties"
    },
    {
      "glob": "junit-platform.properties"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages.properties"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.AnnotationEngine"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.DoNotMockEnforcer"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.DoNotMockEnforcerWithType"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.InstantiatorProvider2"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.MemberAccessor"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.MockMaker"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.MockResolver"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.MockitoLogger"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.PluginSwitch"
    },
    {
      "glob": "mockito-extensions/org.mockito.plugins.StackTraceCleanerProvider"
    },
    {
      "glob": "org/apiguardian/api/API.class"
    },
    {
      "glob": "org/json/JSONObject.class"
    },
    {
      "glob": "org/junit/jupiter/api/extension/ExtendWith.class"
    },
    {
      "glob": "org/mockito/internal/creation/bytebuddy/MockMethodAdvice$ForEquals.class"
    },
    {
      "glob": "org/mockito/internal/creation/bytebuddy/MockMethodAdvice$ForHashCode.class"
    },
    {
      "glob": "org/mockito/internal/creation/bytebuddy/MockMethodAdvice$ForStatic.class"
    },
    {
      "glob": "org/mockito/internal/creation/bytebuddy/MockMethodAdvice.class"
    },
    {
      "glob": "org/mockito/internal/creation/bytebuddy/inject-MockMethodDispatcher.raw"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnCacheDisabled.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupConfigProperty.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupedOpenApiBean.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnListGroupedOpenApiBean.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnActuatorDifferentPort.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$OpenApiResourceAdvice.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$QuerydslProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocRepositoryRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocWebFluxSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$WebConversionServiceConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocDataRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocFunctionCatalogConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocGroovyConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocHateoasConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJacksonKotlinModuleConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJavadocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinxConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocPageableConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSecurityConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSortConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSpecPropertiesConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$Direction.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$SwaggerUrl.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ApiDocs.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Cache.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$GroupConfig.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Groups.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ModelConverters.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$SortConverter.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Webjars.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$Csrf.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$SyntaxHighlight.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiOAuthProperties.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/MultipleOpenApiSupportConfiguration$SpringDocWebMvcActuatorDifferentConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/MultipleOpenApiSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration$SpringDocWebMvcRouterConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/core/configuration/SpringDocWebMvcConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfig$SwaggerActuatorWelcomeConfiguration.class"
    },
    {
      "glob": "org/springdoc/webmvc/ui/SwaggerConfig.class"
    },
    {
      "glob": "org/springframework/aot/hint/annotation/Reflective.class"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanClassLoaderAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/InitializingBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/SmartInitializingSingleton.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/beans/BeansEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cloudfoundry/servlet/CloudFoundryActuatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/condition/ConditionsReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/ShutdownEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jackson/JacksonEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jmx/JmxEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$JerseyServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration$WebEndpointServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/AbstractCompositeHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/CompositeHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ConditionalOnEnabledHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$AdaptedReactiveHealthContributors.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointReactiveWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration$JerseyAdditionalHealthEndpointPathsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration$JerseyAdditionalHealthEndpointPathsResourcesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/mail/MailHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/HeapDumpWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/ThreadDumpEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$NoMeterRegistryCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$SingleInjectableMeterRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/JvmMetricsAutoConfiguration$VirtualThreadMetricsRuntimeHintsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/JvmMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration$LogbackLoggingCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration$MeterRegistryCloser.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/NoOpMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/SystemMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$Cache2kCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$HazelcastCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$JCacheCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$RedisCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/ConditionalOnEnabledMetricsExport.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/integration/IntegrationMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/startup/StartupTimeMetricsListenerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/task/TaskExecutorMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/web/tomcat/TomcatMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MetricsWithTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$ObservedAspectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration$MeterFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestTemplateObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/WebClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/servlet/WebMvcObservationAutoConfiguration$MeterFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/servlet/WebMvcObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/sbom/SbomEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/SecurityRequestMatchersManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/ssl/SslHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/ssl/SslObservabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/startup/StartupEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/system/DiskSpaceHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/ManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ReactiveHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ServletHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseyChildManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseySameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/mappings/MappingsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ConditionalOnManagementPort.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/EnableManagementContext.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$DifferentManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$LocalManagementPortPropertySource.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementContextAutoConfiguration$ApplicationContextFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CaffeineCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBooleanProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnExpression.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnResource.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration$StandardGsonBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration$HypermediaConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/hateoas/HypermediaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/ConditionalOnPreferredJsonMapper.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$GsonHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition$JacksonAvailable.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition$JsonbPreferred.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition$GsonPreferred.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition$JacksonJsonbUnavailable.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/GsonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$HttpMessageConvertersAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration$MappingJackson2XmlHttpMessageConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JacksonHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/JsonbHttpMessageConvertersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/reactive/ClientHttpConnectorAutoConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/reactive/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/ConditionalOnDefaultWebSecurity.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/DefaultWebSecurityCondition$Beans.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/DefaultWebSecurityCondition$Classes.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/DefaultWebSecurityCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$AsyncConfigurerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$BootstrapExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ExecutorBeanCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition$ModelCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$OnExecutorCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/PrimaryDefaultValidatorPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/ConditionalOnEnabledResourceChain.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$NotReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition$VirtualThreadsExecutorEnabled.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationOrVirtualThreadsExecutorEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/DispatcherServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/HttpEncodingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/MultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration$ForwardedHeaderFilterCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/ServletWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$OptionalPathExtensionContentNegotiationStrategy.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceChainResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$ResourceHandlerRegistrationCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$WelcomePageHandlerMappingFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorPageCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$StaticView.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/servlet/error/ErrorMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$JettyWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration$UndertowWebSocketConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/websocket/servlet/WebSocketServletAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/ConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/OverrideAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/core/AutoConfigureCache.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/filter/TypeExcludeFilters.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/json/AutoConfigureJson.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/properties/PropertyMapping.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/reactive/WebTestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/AutoConfigureMockMvc.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/AutoConfigureWebMvc.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcAutoConfiguration$WebTestClientMockMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcConfiguration$MockMvcDispatcherServletCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcTesterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcWebClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/MockMvcWebDriverAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/test/autoconfigure/web/servlet/WebMvcTest.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/ConfigurationPropertiesRebinderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/PauseResumeEndpointsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration$RefreshProperties.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RestartEndpointWithIntegrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RestartEndpointWithoutIntegrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/WritableEnvironmentEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$ActuatorConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/EnableDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/EnableDiscoveryClientImportSelector.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/SimpleDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration$CloudHypermediaProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition$RestClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition$RestTemplatePresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition$RetryDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition$RetryTemplateMissing.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerDefaultMappingsProviderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/config/CommonsConfigAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration$ConditionalOnOAuth2ClientInResourceServer.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration$OAuth2OnClientInResourceServerCondition.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/SpringFactoryImportSelector.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/UtilAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompatibilityVerifierAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/annotation/LoadBalancerClientConfigurationRegistrar.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/annotation/LoadBalancerClients.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/BlockingLoadBalancerClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$CaffeineLoadBalancerCacheManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition$CaffeineCacheManagerClassMissing.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition$CaffeineClassMissing.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition$LoadBalancerCacheEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition$LoadBalancerEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerStatsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/security/OAuth2LoadBalancerClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaDiscoveryClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$DiscoveryClientOptionalArgsTlsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnJerseyClientNotPresentOrNotEnabledCondition$OnJerseyClientDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnJerseyClientNotPresentOrNotEnabledCondition$OnJerseyClientMissing.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnJerseyClientNotPresentOrNotEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnJerseyClientPresentAndEnabledCondition$OnJerseyClientEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnJerseyClientPresentAndEnabledCondition$OnJerseyClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnJerseyClientPresentAndEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestClientPresentAndEnabledCondition$OnJerseyClientNotPresentOrNotEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestClientPresentAndEnabledCondition$OnRestClientEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestClientPresentAndEnabledCondition$OnRestClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestClientPresentAndEnabledCondition$OnWebClientDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestClientPresentAndEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestTemplatePresentAndEnabledCondition$OnJerseyClientNotPresentOrNotEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestTemplatePresentAndEnabledCondition$OnRestClientDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestTemplatePresentAndEnabledCondition$OnRestTemplatePresent.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestTemplatePresentAndEnabledCondition$OnWebClientDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$OnRestTemplatePresentAndEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$RestClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$RestTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$WebClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$WebClientNotFoundConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/loadbalancer/LoadBalancerEurekaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/reactive/EurekaReactiveDiscoveryClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/EnableFeignClients.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$CircuitBreakerPresentFeignTargeterConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$DefaultFeignTargeterConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$FeignJacksonConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$Http2ClientFeignConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$HttpClient5FeignConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$Oauth2FeignConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration$OkHttpFeignConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignCircuitBreakerDisabledConditions$CircuitBreakerClassMissing.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignCircuitBreakerDisabledConditions$CircuitBreakerDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignCircuitBreakerDisabledConditions.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignClientsConfiguration$MicrometerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignClientsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/FeignClientsRegistrar.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/encoding/FeignAcceptGzipEncodingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/encoding/FeignContentGzipEncodingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/hateoas/FeignHalAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/DefaultFeignLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/FeignLoadBalancerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/Http2ClientFeignLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/HttpClient5FeignLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/OkHttpFeignLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/OnRetryNotEnabledCondition$OnLoadBalancerRetryEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/OnRetryNotEnabledCondition$OnNoRetryTemplateCondition.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/OnRetryNotEnabledCondition$OnRetryFactoryCondition.class"
    },
    {
      "glob": "org/springframework/cloud/openfeign/loadbalancer/OnRetryNotEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition$OnBootstrapEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition$OnBootstrapMarkerClassPresent.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition$OnUseLegacyProcessingEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapDisabled$OnBootstrapDisabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition$OnBootstrapEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition$OnBootstrapMarkerClassPresent.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition$OnUseLegacyProcessingEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/util/ConditionalOnBootstrapEnabled$OnBootstrapEnabledCondition.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/ApplicationListener.class"
    },
    {
      "glob": "org/springframework/context/EnvironmentAware.class"
    },
    {
      "glob": "org/springframework/context/ResourceLoaderAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/DeferredImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/context/annotation/Lazy.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/hateoas/config/EnableHypermediaSupport.class"
    },
    {
      "glob": "org/springframework/hateoas/config/EntityLinksConfiguration.class"
    },
    {
      "glob": "org/springframework/hateoas/config/HateoasConfiguration.class"
    },
    {
      "glob": "org/springframework/hateoas/config/HypermediaConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/hateoas/config/HypermediaMappingInformation.class"
    },
    {
      "glob": "org/springframework/hateoas/config/RestTemplateHateoasConfiguration$HypermediaRestTemplateBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/hateoas/config/RestTemplateHateoasConfiguration.class"
    },
    {
      "glob": "org/springframework/hateoas/config/WebMvcEntityLinksConfiguration.class"
    },
    {
      "glob": "org/springframework/hateoas/config/WebMvcHateoasConfiguration$DummyInvocationUtilsCacheClearer.class"
    },
    {
      "glob": "org/springframework/hateoas/config/WebMvcHateoasConfiguration$HypermediaRepresentationModelBeanProcessorPostProcessor.class"
    },
    {
      "glob": "org/springframework/hateoas/config/WebMvcHateoasConfiguration$HypermediaWebMvcConfigurer.class"
    },
    {
      "glob": "org/springframework/hateoas/config/WebMvcHateoasConfiguration.class"
    },
    {
      "glob": "org/springframework/hateoas/config/WebStackImportSelector.class"
    },
    {
      "glob": "org/springframework/hateoas/config/WebTestHateoasConfiguration.class"
    },
    {
      "glob": "org/springframework/hateoas/mediatype/hal/HalMediaTypeConfiguration.class"
    },
    {
      "glob": "org/springframework/plugin/core/config/EnablePluginRegistries.class"
    },
    {
      "glob": "org/springframework/plugin/core/config/PluginRegistriesBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/test/context/BootstrapWith.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/Mapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RequestMapping.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ResponseBody.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestController.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/context/ServletContextAware.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/servlet/config/annotation/WebMvcConfigurer.class"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "rest-default-messages.properties"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "springdoc.config.properties"
    },
    {
      "glob": "static/index.html"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfkc.nrm"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    },
    {
      "module": "jdk.jfr",
      "glob": "jdk/jfr/internal/query/view.ini"
    }
  ],
  "bundles": [
    {
      "name": "jakarta.servlet.LocalStrings",
      "locales": [
        "en-US"
      ]
    },
    {
      "name": "jakarta.servlet.http.LocalStrings",
      "locales": [
        "en-US"
      ]
    }
  ],
  "jni": [
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandArgumentInfo;"
    },
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandInfo;"
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandArgumentInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "boolean",
            "boolean",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.Arrays",
      "methods": [
        {
          "name": "asList",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "sun.instrument.InstrumentationImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "boolean",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "loadClassAndCallAgentmain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "loadClassAndCallPremain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "java.lang.Module",
            "java.lang.ClassLoader",
            "java.lang.String",
            "java.lang.Class",
            "java.security.ProtectionDomain",
            "byte[]",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}